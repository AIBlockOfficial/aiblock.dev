openapi: 3.0.3
info:
  title: Storage API
  description: |-
    ⚠️ **Some sections may still be incomplete. We higly recommend getting started by downloading our [Postman collection](/docs/postman-collections)**.

    The Storage node is responsible for storing the full blockchain history. 
    Once blocks are mined by the miners and sent to the Mempool nodes for validation, they are pushed on to the Storage nodes for long-term storage. 
    Anybody is allowed to request a full history of the blockchain from the Storage nodes, but they are not required to keep such a history to participate in the network.
  contact:
    email: byron.houwens@a-block.ch
  license:
    name: GPL-3.0
    url: https://www.gnu.org/licenses/gpl-3.0.en.html
  version: 1.0.1
externalDocs:
  description: Find out more about AIBlock
  url: https://aiblock.ch
servers:
  - url: https://storage.aiblock.dev
    description: Testnet Storage Node
tags:
  - name: info
    description: Getting information about and from the node.
  - name: block
    description: All calls associated with auditing and checking blocks in the chain.
paths:
  /debug_data:
    get:
      tags:
        - info
      summary: debug_data
      description: Get general information about the current node.
      operationId: debugData
      parameters:
        - in: header
          name: x-cache-id
          description: An idempotent key for retrieving cached responses from the node
          schema:
            type: string
            example: "fde57c5d0e0c49f8a9e91ba5acc18cfd"
            pattern: ^[a-z0-9]{32}$
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseDebugData"
  /latest_block:
    get:
      tags:
        - block
      summary: latest_block
      description: Get the latest block successfully mined and stored on this Storage node.
      operationId: latestBlock
      parameters:
        - in: header
          name: x-cache-id
          description: An idempotent key for retrieving cached responses from the node
          schema:
            type: string
            example: "afac3a3dd8a04538934db1c20cc29767"
            pattern: ^[a-z0-9]{32}$
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseLatestBlock"
  /block_by_num:
    post:
      tags:
        - block
      summary: block_by_num
      description: Fetches block/s from the chain by block number. Multiple block numbers can be supplied in the same request body.
      operationId: blockByNum
      parameters:
        - in: header
          name: x-cache-id
          description: An idempotent key for retrieving cached responses from the node
          schema:
            type: string
            example: "a1d46199e5c89b00509e118f5af83172"
            pattern: ^[a-z0-9]{32}$
      requestBody:
        description: List of block numbers to fetch blocks for in the chain
        content:
          application/json:
            schema:
              type: array
              example: [0, 10, 20000]
              items:
                type: number
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseBlockByNum"
        "400":
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseBadRequest"
  /blockchain_entry:
    post:
      tags:
        - block
      summary: blockchain_entry
      description: Fetches a block or transaction from the chain.
      operationId: blockchainEntry
      requestBody:
        description: The hash of the block or transaction to fetch
        content:
          application/json:
            schema:
              type: string
              example: "ga0e7a2ff46a4a9c9775118db6de61ec"
        required: true
      parameters:
        - in: header
          name: x-cache-id
          description: An idempotent key for retrieving cached responses from the node
          schema:
            type: string
            example: "afac3a3dd8a04538934db1c20cc29767"
            pattern: ^[a-z0-9]{32}$
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseBlockchainEntry"
        "400":
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseBadRequest"
components:
  schemas:
    ResponseDebugData:
      type: object
      properties:
        id:
          type: string
          example: "fde57c5d0e0c49f8a9e91ba5acc18cfd"
          description: The ID of the call, which corresponds to the x-cache-id used in the header
        status:
          type: string
          example: "Success"
          description: The status of the call, which will be one of either "Success", "Error", or "Pending"
        reason:
          type: string
          example: "Debug data successfully retrieved"
          description: The reason for the status of the call. Most useful to debug errors
        route:
          type: string
          example: "debug_data"
          description: The endpoint route that was called
        content:
          type: object
          properties:
            node_type:
              type: string
              example: "Storage"
              description: The type of this node
            node_api:
              type: array
              description: The publicly visible endpoints available on this node
              items:
                type: string
              example:
                - block_by_num
                - latest_block,
                - blockchain_entry,
                - debug_data
            node_peers:
              type: array
              description: The publicly visible nodes that this node is connected to
              items:
                type: string
              example:
                - "Mempool"
            routes_pow:
              type: object
              properties:
                create_transactions:
                  type: number
                  example: 2
    ResponseCheckTxPresence:
      type: object
      properties:
        id:
          type: string
          example: "45v340cd2f8c4782a5b058832565afb1"
          description: The ID of the call, which corresponds to the x-cache-id used in the header
        status:
          type: string
          example: "Success"
          description: The status of the call, which will be one of either "Success", "Error", or "Pending"
        reason:
          type: string
          example: "Database item(s) successfully retrieved"
          description: The reason for the status of the call. Most useful to debug errors
        route:
          type: string
          example: "check_transaction_presence"
          description: The endpoint route that was called
        content:
          type: array
          items:
            type: number
          example: [999661]
    ResponseLatestBlock:
      type: object
      properties:
        id:
          type: string
          example: "45v340cd2f8c4782a5b058832565afb1"
          description: The ID of the call, which corresponds to the x-cache-id used in the header
        status:
          type: string
          example: "Success"
          description: The status of the call, which will be one of either "Success", "Error", or "Pending"
        reason:
          type: string
          example: "Transaction/s successfully created"
          description: The reason for the status of the call. Most useful to debug errors
        route:
          type: string
          example: "create_transactions"
          description: The endpoint route that was called
        content:
          type: object
          description: The block itself. The header contains specific info about the block, while the transactions are stored as a separate property.
          properties:
            block:
              type: object
              properties:
                header:
                  type: object
                  properties:
                    version:
                      type: number
                    bits:
                      type: number
                    b_num:
                      description: The block number
                      type: number
                    seed_value:
                      type: array
                      description: The UNiCORN random number value, which is composed of both the UNiCORN witness and seed value for verification. The example array in this documentation is truncated for brevity.
                      items:
                        example: [56, 53, 48, 57, 52, 57, 50]
                    nonce_and_mining_tx_hash:
                      type: array
                      items:
                        example:
                          [
                            [168, 23, 49, 67, 25, 109],
                            "g130489f617edf5792163c2d4d72568a",
                          ]
                    previous_hash:
                      type: string
                      example: "b0004...7c383"
                    txs_merkle_root_and_hash:
                      type: array
                      items:
                        example: ["", "48dda...ee9df"]
                transactions:
                  type: array
                  description: A list of hashes for all transactions in this block
                  items:
                    example: ["g130489f617edf5792163c2d4d72568a"]
    ResponseBlockByNum:
      type: object
      properties:
        id:
          type: string
          example: "45v340cd2f8c4782a5b058832565afb1"
          description: The ID of the call, which corresponds to the x-cache-id used in the header
        status:
          type: string
          example: "Success"
          description: The status of the call, which will be one of either "Success", "Error", or "Pending"
        reason:
          type: string
          example: "Database item(s) successfully retrieved"
          description: The reason for the status of the call. Most useful to debug errors
        route:
          type: string
          example: "block_by_num"
          description: The endpoint route that was called
        content:
          type: array
          items:
            type: array
            items:
              type: object
              example: 
                {
                  "id": "8bdc6c43fa004725bbd5eabef41e9d5d",
                  "status": "Success",
                  "reason": "Database item(s) successfully retrieved",
                  "route": "block_by_num",
                  "content": [
                    [
                      "b00b7bb7ee1b41c857db05c86f8cf0f5548734d57dcb930605744d24425ea975d",
                        {
                          "block": {
                              "header": {
                                  "version": 6,
                                  "bits": 0,
                                  "nonce_and_mining_tx_hash": [
                                    [
                                      54,
                                      94,
                                      67,
                                      154,
                                      ...
                                    ],
                                    "g4c25d5bf7f3bff93b5cf34bb1dbf4a7"
                                    ],
                                    "b_num": 0,
                                    "timestamp": 0,
                                    "seed_value": [
                                        57,
                                        52,
                                        57,
                                        57,
                                        ...
                                    ],
                                    "previous_hash": null,
                                    "txs_merkle_root_and_hash": [
                                                    "6187c89a825c908668d7ade3d900fa38468be1d0dd5995adc690e6            1c9f3c4717",
                                                    "fd72629f4bb412913474be46095d1b65cac336b67be8db0959460c            4a41016ff6"
                                    ]
                                },
                                "transactions": [
                                    "000000",
                                    "000001",
                                    "000010",
                                    "000011"
                                ]
                            }
                        }
                    ]
                ]
            }
    ResponseBlockchainEntry:
      type: object
      properties:
        id:
          type: string
          example: "45v340cd2f8c4782a5b058832565afb1"
          description: The ID of the call, which corresponds to the x-cache-id used in the header
        status:
          type: string
          example: "Success"
          description: The status of the call, which will be one of either "Success", "Error", or "Pending"
        reason:
          type: string
          example: "Database item(s) successfully retrieved"
          description: The reason for the status of the call. Most useful to debug errors
        route:
          type: string
          example: "blockchain_entry"
          description: The endpoint route that was called
        content:
          type: object
          example:
            {
              "Transaction":
                {
                  "inputs":
                    [
                      {
                        "previous_out": null,
                        "script_signature": { "stack": [{ "Num": 1585843 }] },
                      },
                    ],
                  "outputs":
                    [
                      {
                        "value": { "Token": 5369041 },
                        "locktime": 1585943,
                        "drs_block_hash": null,
                        "script_public_key": "0dafb...afdb3",
                      },
                    ],
                  "version": 5,
                  "druid_info": null,
                },
            }
    ResponseBadRequest:
      type: object
      properties:
        id:
          type: string
          example: null
        status:
          type: string
          example: "Error"
        reason:
          type: string
          example: "Bad Request"
        route:
          type: string
          example: null
        content:
          type: string
          example: null
