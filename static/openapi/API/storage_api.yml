openapi: 3.0.3
info:
  title: Storage API
  description: |-
    The Storage node is responsible for storing the full blockchain history. 
    Once blocks are mined by the miners and sent to the Mempool nodes for validation, they are pushed on to the Storage nodes for long-term storage. 
    Anybody is allowed to request a full history of the blockchain from the Storage nodes, but they are not required to keep such a history to participate in the network. 
  contact:
    email: byron.houwens@a-block.net
  license:
    name: GPL-3.0
    url: https://www.gnu.org/licenses/gpl-3.0.en.html
  version: 1.0.0
externalDocs:
  description: Find out more about A-Block
  url: https://a-block.net
servers:
  - url: http://49.12.234.10:3001
    description: Storage Node
tags:
  - name: info
    description: Getting information about and from the node
  - name: block
    description: All calls associated with auditing and checking blocks in the chain
  - name: transaction
    description: All calls associated with auditing and checking transactions in the chain
paths:
  /debug_data:
    get:
      tags:
        - info
      summary: debug_data
      description: Get general information about the current node
      operationId: debugData
      parameters:
        - in: header
          name: x-request-id
          required: true
          description: An idempotent key for retrieving cached responses from the node
          schema:
            type: array
            items:
              type: string
              example: 'afac3a3dd8a04538934db1c20cc29767'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDebugData'          
            application/xml:
              schema:
                $ref: '#/components/schemas/ResponseDebugData'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseBadRequest'          
            application/xml:
              schema:
                $ref: '#/components/schemas/ResponseBadRequest'
  /latest_block:
    get:
      tags:
        - block
      summary: latest_block
      description: Get the latest block successfully mined and stored on this Storage node
      operationId: latestBlock
      parameters:
        - in: header
          name: x-request-id
          required: true
          description: An idempotent key for retrieving cached responses from the node
          schema:
            type: array
            items:
              type: string
              example: 'afac3a3dd8a04538934db1c20cc29767'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseLatestBlock'          
            application/xml:
              schema:
                $ref: '#/components/schemas/ResponseLatestBlock'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseBadRequest'          
            application/xml:
              schema:
                $ref: '#/components/schemas/ResponseBadRequest'
  /block_by_num:
    post:
      tags:
        - block
      summary: block_by_num
      description: Fetches block/s from the chain by block number. Multiple block numbers can be supplied in the same request body
      operationId: blockByNum
      parameters:
        - in: header
          name: x-request-id
          required: true
          description: An idempotent key for retrieving cached responses from the node
          schema:
            type: array
            items:
              type: string
              example: 'afac3a3dd8a04538934db1c20cc29767'
      requestBody:
        description: List of block numbers to fetch blocks for in the chain
        content:
          application/json:
            schema:
              example:
                [0, 10, 20000]
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseBlockByNum'          
            application/xml:
              schema:
                $ref: '#/components/schemas/ResponseBlockByNum'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseBadRequest'          
            application/xml:
              schema:
                $ref: '#/components/schemas/ResponseBadRequest'
  /blockchain_entry:
    post:
      tags:
        - info
      summary: blockchain_entry
      description: Fetches a block or transaction from the chain
      operationId: blockchainEntry
      requestBody:
        description: The hash of the block or transaction to fetch
        content:
          application/json:
            schema:
              type: string
              example:
                "ga0e7a2ff46a4a9c9775118db6de61ec"
        required: true
      parameters:
        - in: header
          name: x-request-id
          required: true
          description: An idempotent key for retrieving cached responses from the node
          schema:
            type: array
            items:
              type: string
              example: 'afac3a3dd8a04538934db1c20cc29767'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseBlockchainEntry'          
            application/xml:
              schema:
                $ref: '#/components/schemas/ResponseBlockchainEntry'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseBadRequest'          
            application/xml:
              schema:
                $ref: '#/components/schemas/ResponseBadRequest'
  /address_construction:
    post:
      tags:
        - transaction
      summary: address_construction
      description: Fetches the block number/s for the given transaction hash/es, if the hashes are present
      operationId: addressConstruction
components:
  schemas:
    ResponseDebugData:
      type: object
      properties:
        id:
          type: string
          example: '45v340cd2f8c4782a5b058832565afb1'
          description: The ID of the call, which corresponds to the x-request-id used in the header
        status:
          type: string
          example: 'Success'
          description: The status of the call, which will be one of either "Success", "Error", or "Pending"
        reason:
          type: string
          example: 'Debug data successfully retrieved'
          description: The reason for the status of the call. Most useful to debug errors
        route:
          type: string
          example: 'debug_data'
          description: The endpoint route that was called
        content:
          type: object
          properties:
            node_type:
              type: string
              example: 'Compute'
              description: The type of this node
            node_api:
              type: array
              description: The publicly visible endpoints available on this node
              items:
                type: string
              example:
                - fetch_balance
                - create_receipt_asset
                - create_transactions
            node_peers:
              type: array
              description: The publicly visible nodes that this node is connected to
              items:
                type: string
              example:
                - 'Storage'
    ResponseCheckTxPresence:
      type: object
      properties:
        id:
          type: string
          example: '45v340cd2f8c4782a5b058832565afb1'
          description: The ID of the call, which corresponds to the x-request-id used in the header
        status:
          type: string
          example: 'Success'
          description: The status of the call, which will be one of either "Success", "Error", or "Pending"
        reason:
          type: string
          example: 'Database item(s) successfully retrieved'
          description: The reason for the status of the call. Most useful to debug errors
        route:
          type: string
          example: 'check_transaction_presence'
          description: The endpoint route that was called
        content:
          type: array
          items:
            type: number
          example: [
              999661
          ]
    ResponseLatestBlock:
      type: object
      properties:
        id:
          type: string
          example: '45v340cd2f8c4782a5b058832565afb1'
          description: The ID of the call, which corresponds to the x-request-id used in the header
        status:
          type: string
          example: 'Success'
          description: The status of the call, which will be one of either "Success", "Error", or "Pending"
        reason:
          type: string
          example: 'Transaction/s successfully created'
          description: The reason for the status of the call. Most useful to debug errors
        route:
          type: string
          example: 'create_transactions'
          description: The endpoint route that was called
        content:
          type: object
          description: The block itself. The header contains specific info about the block, while the transactions are stored as a separate property.
          properties:
            block:
              type: object
              properties:
                header:
                  type: object
                  properties:
                    version:
                      type: number
                    bits:
                      type: number
                    b_num:
                      description: The block number
                      type: number
                    seed_value:
                      type: array
                      description: The UNiCORN random number value, which is composed of both the UNiCORN witness and seed value for verification. The example array in this documentation is truncated for brevity.
                      items:
                        example: [
                          56,
                          53,
                          48,
                          57,
                          52,
                          57,
                          50,
                        ]
                    nonce_and_mining_tx_hash:
                      type: array
                      items:
                        example: [
                            [
                                168,
                                23,
                                49,
                                67,
                                25,
                                109
                            ],
                            "g130489f617edf5792163c2d4d72568a"
                        ]
                    previous_hash: 
                      type: string
                      example: 'b0004...7c383'
                    txs_merkle_root_and_hash:
                      type: array
                      items:
                        example: [
                            "",
                           "48dda...ee9df"
                        ]
                transactions:
                    type: array
                    description: A list of hashes for all transactions in this block
                    items:
                      example: [
                        "g130489f617edf5792163c2d4d72568a"
                      ]
    ResponseBlockByNum:
      type: object
      properties:
        id:
          type: string
          example: '45v340cd2f8c4782a5b058832565afb1'
          description: The ID of the call, which corresponds to the x-request-id used in the header
        status:
          type: string
          example: 'Success'
          description: The status of the call, which will be one of either "Success", "Error", or "Pending"
        reason:
          type: string
          example: 'Database item(s) successfully retrieved'
          description: The reason for the status of the call. Most useful to debug errors
        route:
          type: string
          example: 'block_by_num'
          description: The endpoint route that was called
        content:
          type: array
          items:
            type: array
            items:
              type: object
            example: [
            "eefe38...a1aca0",
            {
                "block": {
                    "header": {
                        "version": 0,
                        "bits": 0,
                        "nonce": [],
                        "b_num": 0,
                        "seed_value": [],
                        "previous_hash": null,
                        "merkle_root_hash": ""
                    },
                    "transactions": [
                        "000001",
                        "000002",
                        "000003",
                        "000004",
                    ]
                },
                "mining_tx_hash_and_nonces": {
                    "1": [
                        "g458b6a340cdb3f40f66adff12637aeb",
                        [
                            112,
                            129,
                            50,
                            22,
                            128,
                            18,
                            179,
                        ]
                    ]
                }
            }
        ]
    ResponseBlockchainEntry:
      type: object
      properties:
        id:
          type: string
          example: '45v340cd2f8c4782a5b058832565afb1'
          description: The ID of the call, which corresponds to the x-request-id used in the header
        status:
          type: string
          example: 'Success'
          description: The status of the call, which will be one of either "Success", "Error", or "Pending"
        reason:
          type: string
          example: 'Database item(s) successfully retrieved'
          description: The reason for the status of the call. Most useful to debug errors
        route:
          type: string
          example: 'blockchain_entry'
          description: The endpoint route that was called
        content: 
          type: object
          example: {"Transaction": {
            "inputs": [
                {
                    "previous_out": null,
                    "script_signature": {
                        "stack": [
                            {
                                "Num": 1585843
                            }
                        ]
                    }
                }
            ],
            "outputs": [
                {
                    "value": {
                        "Token": 5369041
                    },
                    "locktime": 1585943,
                    "drs_block_hash": null,
                    "script_public_key": "0dafb...afdb3"
                }
            ],
            "version": 5,
            "druid_info": null
        }}
    ResponseBadRequest:
      type: object
      properties:
        id:
          type: string
          example: null
        status:
          type: string
          example: "Error"
        reason:
          type: string
          example: 'Bad Request'
        route:
          type: string
          example: null
        content:
          type: string
          example: null